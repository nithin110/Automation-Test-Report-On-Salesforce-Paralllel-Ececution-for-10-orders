<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="ts8" time="1556.923" tests="1" failures="0" errors="0">
   <testsuite name="ts8" tests="1" failures="0" errors="0" time="1556.923" skipped="0" timestamp="2022-08-09 13:39:35" hostname="pc - DESKTOP-1IRFQ4R" id="Test Suites/ts8">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\pc\\Katalon Studio\\Nithin\\Reports\\20220809_133707\\ts8\\20220809_133723"/>
         <property name="logFiles" value="C:\\Users\\pc\\Katalon Studio\\Nithin\\Reports\\20220809_133707\\ts8\\20220809_133723\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="pc - DESKTOP-1IRFQ4R"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.4.0.208"/>
         <property name="browser" value="Chrome 103.0.5060.134"/>
         <property name="hostAddress" value="192.168.1.6"/>
         <property name="sessionId" value="6853ae32106c6bf1c022d3077786605b"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/tc8" time="1553.636" classname="Test Cases/tc8" status="PASSED">
         <system-out><![CDATA[2022-08-09 13:39:38 - [TEST_CASE][PASSED] - Test Cases/tc8: Test Cases/tc8

2022-08-09 13:39:44 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2022-08-09 13:39:49 - [MESSAGE][INFO] - Starting 'Chrome' driver

2022-08-09 13:39:50 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2022-08-09 13:40:12 - [MESSAGE][PASSED] - Browser is opened with url: ''

2022-08-09 13:40:12 - [TEST_STEP][PASSED] - navigateToUrl("https://secure.robbooker.com/staging/oc_exc_popo_crosssell/?inv_campaign=MID0023398"): Navigate to 'https://secure.robbooker.com/staging/oc_exc_popo_crosssell/?inv_campaign=MID0023398' successfully

2022-08-09 13:40:19 - [MESSAGE][PASSED] - Navigate to 'https://secure.robbooker.com/staging/oc_exc_popo_crosssell/?inv_campaign=MID0023398' successfully

2022-08-09 13:40:19 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_The Exotics Club  VSL Page/input_Enter Your Email to Unlock the System_f96648"), "nith279+quiz908tc8h@yahoo.com"): Text 'nith279+quiz908tc8h@yahoo.com' is set on object 'Object Repository/Page_The Exotics Club  VSL Page/input_Enter Your Email to Unlock the System_f96648'

2022-08-09 13:40:25 - [MESSAGE][PASSED] - Text 'nith279+quiz908tc8h@yahoo.com' is set on object 'Object Repository/Page_The Exotics Club  VSL Page/input_Enter Your Email to Unlock the System_f96648'

2022-08-09 13:40:25 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_The Exotics Club  VSL Page/button_Watch the Presentation")): Object: 'Object Repository/Page_The Exotics Club  VSL Page/button_Watch the Presentation' is clicked on

2022-08-09 13:40:41 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_The Exotics Club  VSL Page/button_Watch the Presentation' is clicked on

2022-08-09 13:40:41 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Contact Information_fn"), "Fn"): Text 'Fn' is set on object 'Object Repository/Page_/input_Contact Information_fn'

2022-08-09 13:40:45 - [MESSAGE][PASSED] - Text 'Fn' is set on object 'Object Repository/Page_/input_Contact Information_fn'

2022-08-09 13:40:45 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Contact Information_ln"), "Ln"): Text 'Ln' is set on object 'Object Repository/Page_/input_Contact Information_ln'

2022-08-09 13:40:46 - [MESSAGE][PASSED] - Text 'Ln' is set on object 'Object Repository/Page_/input_Contact Information_ln'

2022-08-09 13:40:46 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Contact Information_phone"), "424 2"): Text '424 2' is set on object 'Object Repository/Page_/input_Contact Information_phone'

2022-08-09 13:40:50 - [MESSAGE][PASSED] - Text '424 2' is set on object 'Object Repository/Page_/input_Contact Information_phone'

2022-08-09 13:40:50 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Billing Information_street"), "Sa"): Text 'Sa' is set on object 'Object Repository/Page_/input_Billing Information_street'

2022-08-09 13:40:53 - [MESSAGE][PASSED] - Text 'Sa' is set on object 'Object Repository/Page_/input_Billing Information_street'

2022-08-09 13:40:53 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Billing Information_city"), "Cty"): Text 'Cty' is set on object 'Object Repository/Page_/input_Billing Information_city'

2022-08-09 13:40:56 - [MESSAGE][PASSED] - Text 'Cty' is set on object 'Object Repository/Page_/input_Billing Information_city'

2022-08-09 13:40:56 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Payment Information_ccno"), "4000 0037 2000 0005"): Text '4000 0037 2000 0005' is set on object 'Object Repository/Page_/input_Payment Information_ccno'

2022-08-09 13:40:58 - [MESSAGE][PASSED] - Text '4000 0037 2000 0005' is set on object 'Object Repository/Page_/input_Payment Information_ccno'

2022-08-09 13:40:58 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("Object Repository/Page_/select_202220232024202520262027202820292030_d6720a"), "2028", true): All options with value '2028' are selected in object 'Object Repository/Page_/select_202220232024202520262027202820292030_d6720a'  using regular expression

2022-08-09 13:41:02 - [MESSAGE][PASSED] - All options with value '2028' are selected in object 'Object Repository/Page_/select_202220232024202520262027202820292030_d6720a'  using regular expression

2022-08-09 13:41:02 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Payment Information_cccode"), "123"): Text '123' is set on object 'Object Repository/Page_/input_Payment Information_cccode'

2022-08-09 13:41:03 - [MESSAGE][PASSED] - Text '123' is set on object 'Object Repository/Page_/input_Payment Information_cccode'

2022-08-09 13:41:03 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_/input_Payment Information_zip"), "32004"): Text '32004' is set on object 'Object Repository/Page_/input_Payment Information_zip'

2022-08-09 13:41:05 - [MESSAGE][PASSED] - Text '32004' is set on object 'Object Repository/Page_/input_Payment Information_zip'

2022-08-09 13:41:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:05 - [TEST_STEP][PASSED] - tn = today.format("hh:mm"): null

2022-08-09 13:41:05 - [TEST_STEP][PASSED] - while (tn != "01:55"): null

2022-08-09 13:41:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:41:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:41:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:41:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:41:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:41:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:41:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:42:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:42:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:42:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:42:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:42:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:42:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:43:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:43:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:43:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:43:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:43:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:43:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:44:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:44:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:44:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:44:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:44:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:44:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:45:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:45:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:45:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:45:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:45:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:45:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:46:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:46:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:46:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:46:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:46:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:46:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:47:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:47:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:47:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:47:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:47:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:47:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:48:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:48:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:48:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:48:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:48:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:48:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:49:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:49:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:49:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:49:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:49:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:49:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:50:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:50:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:50:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:50:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:50:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:50:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:51:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:51:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:51:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:51:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:51:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:51:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:52:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:52:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:52:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:52:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:52:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:52:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:11 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:11 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:12 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:53:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:53:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:53:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:53:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:53:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:53:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:01 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:01 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:01 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:02 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:02 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:02 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:03 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:03 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:03 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:04 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:04 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:04 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:05 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:05 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:05 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:06 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:06 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:06 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:07 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:07 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:07 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:08 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:08 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:08 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:09 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:09 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:09 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:10 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:10 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:10 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:11 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:12 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:12 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:13 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:13 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:13 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:14 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:14 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:14 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:15 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:15 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:15 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:16 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:16 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:16 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:17 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:17 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:17 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:18 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:18 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:18 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:19 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:19 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:19 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:20 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:20 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:20 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:21 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:21 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:21 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:22 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:22 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:22 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:23 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:23 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:23 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:24 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:24 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:24 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:25 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:25 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:25 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:26 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:26 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:26 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:27 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:27 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:27 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:28 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:28 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:28 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:29 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:29 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:29 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:30 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:30 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:30 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:31 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:31 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:31 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:32 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:32 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:32 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:33 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:33 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:33 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:34 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:34 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:34 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:35 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:35 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:35 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:36 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:36 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:36 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:37 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:37 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:37 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:38 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:38 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:38 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:39 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:39 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:39 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:40 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:40 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:40 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:41 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:41 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:41 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:42 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:42 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:42 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:43 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:43 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:43 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:44 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:44 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:44 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:45 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:45 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:45 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:46 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:46 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:46 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:47 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:47 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:47 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:48 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:48 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:48 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:49 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:49 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:49 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:50 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:50 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:50 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:51 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:51 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:51 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:52 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:52 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:52 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:53 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:53 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:53 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:54 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:54 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:54 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:55 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:55 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:55 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:56 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:56 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:56 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:57 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:57 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:57 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:58 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:58 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:58 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:54:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:54:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:54:59 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:54:59 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:54:59 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:54:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - nw = tnw.format("hh:mm"): null

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - tn = nw: null

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - if (tn == "01:55"): null

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - break: null

2022-08-09 13:55:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_/button_Order Now")): Object: 'Object Repository/Page_/button_Order Now' is clicked on

2022-08-09 13:55:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_/button_Order Now' is clicked on

2022-08-09 13:55:35 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/input_Do nothing. You can bury your head in_b06974")): Object: 'Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/input_Do nothing. You can bury your head in_b06974' is clicked on

2022-08-09 13:55:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/input_Do nothing. You can bury your head in_b06974' is clicked on

2022-08-09 13:55:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:39 - [TEST_STEP][PASSED] - tu = today.format("hh:mm"): null

2022-08-09 13:55:39 - [TEST_STEP][PASSED] - while (tu != "02:05"): null

2022-08-09 13:55:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:55:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:55:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:55:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:55:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:55:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:55:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:56:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:56:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:56:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:56:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:56:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:56:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:57:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:57:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:57:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:57:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:57:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:57:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:58:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:58:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:58:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:58:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:58:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:58:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 13:59:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 13:59:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 13:59:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 13:59:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 13:59:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 13:59:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:00:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:00:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:00:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:00:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:00:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:00:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:01:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:01:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:01:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:01:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:01:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:01:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:02:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:02:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:02:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:02:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:02:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:02:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:05 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:05 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:05 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:05 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:03:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:03:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:03:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:03:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:03:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:03:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:00 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:01 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:01 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:01 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:01 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:01 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:01 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:02 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:02 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:02 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:02 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:02 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:02 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:03 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:03 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:03 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:03 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:03 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:04 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:04 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:04 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:04 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:04 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:06 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:06 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:06 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:06 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:07 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:07 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:07 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:07 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:08 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:08 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:08 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:08 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:08 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:09 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:09 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:09 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:09 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:09 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:10 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:10 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:10 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:10 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:10 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:11 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:11 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:11 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:11 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:11 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:12 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:12 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:12 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:12 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:12 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:13 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:13 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:13 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:13 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:13 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:13 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:14 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:14 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:14 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:14 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:14 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:14 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:15 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:15 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:15 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:15 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:15 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:15 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:16 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:16 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:16 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:16 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:16 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:17 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:17 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:17 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:17 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:18 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:18 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:18 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:18 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:18 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:19 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:19 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:19 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:19 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:19 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:20 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:20 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:20 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:20 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:20 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:21 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:21 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:21 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:21 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:22 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:22 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:22 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:22 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:23 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:23 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:23 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:23 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:24 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:24 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:24 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:24 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:24 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:25 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:25 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:25 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:25 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:25 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:26 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:26 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:26 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:26 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:26 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:27 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:27 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:27 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:27 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:28 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:28 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:28 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:28 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:29 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:29 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:29 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:29 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:29 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:30 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:30 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:30 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:30 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:30 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:31 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:31 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:31 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:31 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:32 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:32 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:32 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:32 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:33 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:33 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:33 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:33 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:33 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:34 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:34 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:34 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:34 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:34 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:35 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:35 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:35 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:35 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:35 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:36 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:36 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:36 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:36 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:37 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:37 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:37 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:37 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:38 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:38 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:38 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:38 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:39 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:39 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:39 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:39 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:39 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:40 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:40 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:40 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:40 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:40 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:41 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:41 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:41 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:41 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:41 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:42 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:42 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:42 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:42 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:42 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:43 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:43 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:43 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:43 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:44 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:44 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:44 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:44 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:44 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:44 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:45 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:45 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:45 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:45 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:45 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:46 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:46 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:46 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:46 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:47 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:47 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:47 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:47 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:48 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:48 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:48 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:48 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:48 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:49 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:49 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:49 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:49 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:49 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:50 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:50 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:50 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:50 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:51 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:51 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:51 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:51 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:51 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:52 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:52 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:52 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:52 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:52 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:53 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:53 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:53 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:53 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:54 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:54 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:54 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:54 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:55 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:55 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:55 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:55 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:55 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:56 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:56 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:56 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:56 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:56 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:56 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:57 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:57 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:57 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:57 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:57 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:58 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:58 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:58 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:58 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:04:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:04:59 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:04:59 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:04:59 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:04:59 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:04:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2022-08-09 14:05:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - use(groovy.time.TimeCategory, { -> ... }): null

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - nuw = tuw.format("hh:mm"): null

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - tu = nuw: null

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - if (tu == "02:05"): null

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - break: null

2022-08-09 14:05:00 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/button_Yes, Give Me LIFETIME Access to Jump_54a76a")): Object: 'Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/button_Yes, Give Me LIFETIME Access to Jump_54a76a' is clicked on

2022-08-09 14:05:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_The Exotics Club  Jump Trade Profit Alerts/button_Yes, Give Me LIFETIME Access to Jump_54a76a' is clicked on

2022-08-09 14:05:25 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2022-08-09 14:05:30 - [MESSAGE][PASSED] - Browser is closed]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2022-08-09 13:39:35 - [TEST_SUITE][PASSED] - ts8: Test Cases/tc8]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
